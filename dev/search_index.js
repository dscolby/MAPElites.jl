var documenterSearchIndex = {"docs":
[{"location":"guide/#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"guide/","page":"Guide","title":"Guide","text":"From the Julia REPL, type ] to enter the Pkg REPL mode and run","category":"page"},{"location":"guide/","page":"Guide","title":"Guide","text":"pkg> add MAPElites","category":"page"},{"location":"guide/#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"guide/#Standard-Workflow","page":"Guide","title":"Standard Workflow","text":"","category":"section"},{"location":"guide/#Using-with-Optimizers.jl","page":"Guide","title":"Using with Optimizers.jl","text":"","category":"section"},{"location":"guide/#Algorihtms","page":"Guide","title":"Algorihtms","text":"","category":"section"},{"location":"guide/#MAP-Elites","page":"Guide","title":"MAP-Elites","text":"","category":"section"},{"location":"guide/","page":"Guide","title":"Guide","text":"MAP Elites initializes a discretized behavior grid with random solutions, then uses genetic  operators to improve the solutions in each grid cell. This results in an archive of diverse,  high-performing solutions.[1]","category":"page"},{"location":"guide/#CVT-MAP-Elites","page":"Guide","title":"CVT-MAP-Elites","text":"","category":"section"},{"location":"guide/","page":"Guide","title":"Guide","text":"Central Voronoi tesselation MAP-Elites (CVT-MAP-Elites) replaces fixed grid cells with a fixed  number of Voronoi tesselations to scale MAP-Elites to higher dimensional behavior spaces.[2]","category":"page"},{"location":"guide/#AURORA","page":"Guide","title":"AURORA","text":"","category":"section"},{"location":"guide/","page":"Guide","title":"Guide","text":"AUtonomous RObots that Realize their Abilities (AURORA) extends MAP-Elites to high-dimensional  or complicated behavior spaces by using unsupervised learning methods to project behavioral  descriptors into a lower dimensional latent space and store them in an adaptively sized archive.[3]  The implementation in MAPElites.jl uses principal component analysis as the dimensionality reduction  technique, which tended to perform better than an autoencoder in experiments in the original paper.","category":"page"},{"location":"guide/#SAIL","page":"Guide","title":"SAIL","text":"","category":"section"},{"location":"guide/","page":"Guide","title":"Guide","text":"Surrogate assisted illumination (SAIL) combines MAP-Elites with a Gaussian process regression (GP)  to reduce sample complexity. After initially filling a behavioral archive, SAIL trains a on the archive to predict the objective function. Then, SAIL uses another archive, the acquisition archive,  to run UCB on the initial solutions, replacing the objective function with an upper confidence bound  estimate from the GP. Then, k solutions are sampled from the acquisition archive and evaluated on the objectie function. If they perform better than the solution in corresponding cell of the behavioral  archive, then they replace that behavior. The process then repeats for a fixed number of iterations.[4]","category":"page"},{"location":"guide/#CMA-MAP-Elites","page":"Guide","title":"CMA-MAP-Elites","text":"","category":"section"},{"location":"guide/","page":"Guide","title":"Guide","text":"Covariance Matrix Adaptation MAP-Elites (CMA MAP-Elites) improves the sample efficiency of the  original MAP-Elites algorithm by replacing the crossover and mutation operators with covariance  matrix adaptation.[5]","category":"page"},{"location":"guide/#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"guide/","page":"Guide","title":"Guide","text":"[1]: Mouret, Jean-Baptiste, and Jeff Clune. \"Illuminating search spaces by mapping elites.\" arXiv preprint arXiv:1504.04909 (2015).","category":"page"},{"location":"guide/","page":"Guide","title":"Guide","text":"[2]: Vassiliades, Vassilis, Konstantinos Chatzilygeroudis, and Jean-Baptiste Mouret. \"Using centroidal voronoi tessellations to scale up the multidimensional archive of phenotypic elites algorithm.\" IEEE Transactions on Evolutionary Computation 22, no. 4 (2017): 623-630.","category":"page"},{"location":"guide/","page":"Guide","title":"Guide","text":"[3]: Cully, Antoine. \"Autonomous skill discovery with quality-diversity and unsupervised descriptors.\" In Proceedings of the Genetic and Evolutionary Computation Conference, pp. 81-89. 2019.","category":"page"},{"location":"guide/","page":"Guide","title":"Guide","text":"[4]: Gaier, Adam, Alexander Asteroth, and Jean-Baptiste Mouret. \"Data-efficient exploration, optimization, and modeling of diverse designs through surrogate-assisted illumination.\" In Proceedings of the Genetic and Evolutionary Computation Conference, pp. 99-106. 2017.","category":"page"},{"location":"guide/","page":"Guide","title":"Guide","text":"[5]: Fontaine, Matthew C., Julian Togelius, Stefanos Nikolaidis, and Amy K. Hoover. \"Covariance matrix adaptation for the rapid illumination of behavior space.\" In Proceedings of the 2020 genetic and evolutionary computation conference, pp. 94-102. 2020.","category":"page"},{"location":"CHANGELOG/#Changelog","page":"Release Notes","title":"Changelog","text":"","category":"section"},{"location":"CHANGELOG/#[Unreleased]","page":"Release Notes","title":"[Unreleased]","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<div style=\"text-align: center; padding: 1rem;\">\n            <a class=\"github-button\"\n               href=\"https://github.com/dscolby/MAPElites.jl\"\n               data-icon=\"octicon-star\"\n               data-size=\"large\"\n               data-show-count=\"true\"\n               aria-label=\"Star dscolby/MAPElites.jl on GitHub\">\n               Star\n            </a>\n            <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n        </div>","category":"page"},{"location":"#Motivation","page":"Home","title":"Motivation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Most optimization algorithms search for a single best solution, but this can be suboptimal for various reasons. First, many optimizers get stuck in a local min/maximum searching for a single best solution. Second, a lot of optimizers are unable to balance exploration and exploitation, which can lead them to overlook promising solutions or even get stuck in local optima. Third, almost all  optimization algorithms are not ammenable to understanding the relationship between features and  performance â€” they are bascially just black boxes. And finally, and arguably the biggest motivation,  is that traditional optimization seeks a single best solution for a given situation. However, what  works well in one situation might not be the best solution for another. Quality-diversity algorithms address these shortcomings by searching for a diverse set of high performing solutions, rather  than a single solution. One of the most successful and widely used quality-diversity algorithms  is Multi-dimensional Archive of Phenotypic Elites (MAP-Elites), which can be categorized as an  evolutionary algorithm. MAP-Elites uses genetic operators to evolve high quality candidate solutions  at each point within a discretized behavior (feature) space, which the user can choose.[1]","category":"page"},{"location":"#Package","page":"Home","title":"Package","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Simplicity at its core: MAPElites.jl is designed to be simple and easy to use. Therefore, it    contains implementations for a diverse but small core set of variants of MAP-Elites to cover a    variety of situations without requiring hard-to-understand abstractions.\nCustomizable: MAPElites.jl lets you use whatever behavior descriptors or fitness functions you    want. You can use any function as a fitness function as long as it returns a real number. This    also makes it easy to mix and match genetic operators, behavior descriptions, and fitness functions,    or write your own.\nLibrary-agnostic: Unlike some Python implementations of quality-diversity algorithms, MAPElites.jl   doesn't require you to use any specific library for arrays or tensors. You are free to use base    Julia, CUDA arrays from CUDA.jl, or any other library. As long as your fitness function can    evaluate your candidate solutions, you can use whatever data structure you want, be it arrays,    strings, images, or anything else.\nWorks with Optimization.jl: The implementations in MAPElites.jl can also be called from within   Optimization.jl (coming soon).","category":"page"},{"location":"#Alternatives","page":"Home","title":"Alternatives","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"There are a few alternatives to MAPElites.jl for quality-diversity algorithms written in Python.","category":"page"},{"location":"","page":"Home","title":"Home","text":"QDax: A Jax-based implementation of several quality-diversity algorithms mostly designed around    reinforcement learning and robotics.\nPyRibs: A barebones Python implementation that uses an ask-tell interface that also focuses on    reinforcement learning.\nqdpy: A generic minimal implementation of quality-diversity algroithms in Python.\nCVT-MAP-Elites: A simple Python implementation of CVT-MAP-Elites.","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#References","page":"Home","title":"References","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"[1]: Mouret, Jean-Baptiste, and Jeff Clune. \"Illuminating search spaces by mapping elites.\" arXiv preprint arXiv:1504.04909 (2015).","category":"page"},{"location":"developers/#MAPElites.jl","page":"Developers","title":"MAPElites.jl","text":"","category":"section"},{"location":"developers/#Structs","page":"Developers","title":"Structs","text":"","category":"section"},{"location":"developers/#Functions","page":"Developers","title":"Functions","text":"","category":"section"},{"location":"developers/#Macros","page":"Developers","title":"Macros","text":"","category":"section"},{"location":"developers/#Contributing","page":"Developers","title":"Contributing","text":"","category":"section"},{"location":"developers/","page":"Developers","title":"Developers","text":"All contributions are welcome. To ensure contributions align with the existing code base and  are not duplicated, please follow the guidelines below.","category":"page"},{"location":"developers/#Reporting-a-Bug","page":"Developers","title":"Reporting a Bug","text":"","category":"section"},{"location":"developers/","page":"Developers","title":"Developers","text":"To report a bug, open an issue on GitHub page.  Please include all relevant information, such as what methods were called, the operating system used,  the verion/s of MAPElites.jl used, the verion/s of Julia used, any tracebacks or error codes, and  any other information that would be helpful for debugging. Also be sure to use the bug label.","category":"page"},{"location":"developers/#Requesting-New-Features","page":"Developers","title":"Requesting New Features","text":"","category":"section"},{"location":"developers/","page":"Developers","title":"Developers","text":"Before requesting a new feature, please check the issues page on GitHub  to make sure someone else did not already request the same feature. If this is not the case, then  please open an issue that explains what function or method you would like to be added and how you  believe it should behave. Also be sure to use the enhancement tag.","category":"page"},{"location":"developers/#Contributing-Code","page":"Developers","title":"Contributing Code","text":"","category":"section"},{"location":"developers/","page":"Developers","title":"Developers","text":"Before submitting a pull request, please  open an issue explaining what the proposed code is and why you want to add it, if there is  not already an issue that addresses your changes and you are not fixing something very  minor. When submitting a pull request, please reference the relevant issue/s and ensure your  code follows the guidelines below.","category":"page"},{"location":"developers/","page":"Developers","title":"Developers","text":"Before being merged, all pull requests should be well tested and all tests must be passing.\nAll abstract types, structs, functions, methods, macros, and constants have docstrings    that follow the same format as the other docstrings. These functions should also be    included in the relevant section above.\nThere are no repeated code blocks. If there are repeated codeblocks, then they should be    consolidated into a separate function.\nInteranl methods can contain types and be parametric but public methods should be as    general as possible.\nMinimize use of new constants and macros. If they must be included, the reason for their    inclusion should be obvious or included in the docstring.\nIn most cases, avoid using global variables and constants.\nCode should take advantage of Julia's built in macros for performance. Use @inbounds,    @view, @fastmath, and @simd when possible.\nWhen appending to an array in a loop, preallocate the array and update its values by    index.\nAvoid long functions and decompose them into smaller functions or methods. A general    rule is that function definitions should fit on your screen.\nUse self-explanatory names for variables, methods, structs, constants, and macros.\nMake generous use of whitespace.\nAll functions should include docstrings.","category":"page"},{"location":"developers/","page":"Developers","title":"Developers","text":"note: Note\nMAPElites.jl follows the Blue style guide and all code is automatically formatted to  conform with this standard upon being pushed to GitHub.","category":"page"},{"location":"developers/#Updating-or-Fixing-Documentation","page":"Developers","title":"Updating or Fixing Documentation","text":"","category":"section"},{"location":"developers/","page":"Developers","title":"Developers","text":"To propose a change to the documentation please submit an issue  or pull request.","category":"page"}]
}
